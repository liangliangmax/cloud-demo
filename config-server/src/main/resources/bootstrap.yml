eureka:
    instance:
        # docker 部署开启
        prefer-ip-address: true
        ip-address: ${host_ip:localhost}
        metadata-map:
          # 用来拦截/actutor/* 监控用的。要不然只要知道ip和端口就能看到监控信息。
          # 这个参数在注册到eureka中时会带入eureka中，当客户端访问时候会调用
          # de.codecentric.boot.admin.server.web.client.BasicAuthHttpHeaderProvider这个类，将这个信息放到消息头里面
          user:
            name: neupals
            password: Neupals2019

    client:
        registerWithEureka: true
        fetchRegistry: true
        serviceUrl:
            defaultZone: http://${eureka_host:localhost}:${eureka_port:8761}/eureka/

spring:
    application:
        name: config-server
    profiles:
      active: native    #subversion|native
    cloud:
      config:
        server:
          native:
            search-locations: classpath:/neuabc_config/{profile}
          svn:
            uri: ${svn_uri:http://svn.neupals.com/svn/neuabc3.0}   # 用postman发post请求，输入http://localhost:8750/bus/refresh 即可刷新全部
            username: ${svn_user:neuabc3_read}
            password: ${svn_password:Neupals@2019}
            default-label: ${svn_label:branches/release.3.0.0}
            search-paths: '{profile}'


server:
    port: 8750 #启动端口
    tomcat:
        max-connections: 10000
        max-threads: 1000
        uri-encoding: UTF-8

#2.0暴露端点的方式
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
      health:
        show-details: ALWAYS

logging:
  config: ${log_config_path:classpath:logback.xml}